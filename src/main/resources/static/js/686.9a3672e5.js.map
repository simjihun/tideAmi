{"version":3,"file":"js/686.9a3672e5.js","mappings":"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","sources":["webpack://front-end/./src/views/RegisterPage.vue","webpack://front-end/./node_modules/@vuelidate/validators/dist/index.mjs","webpack://front-end/./src/services/registration/index.js","webpack://front-end/./src/views/RegisterPage.vue?5906"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"register-form\">\n        <div class=\"logo-wrapper\">\n          <img class=\"logo\" src=\"../assets/logo.png\" />\n          <div class=\"tagline\">Open source task management tool</div>\n        </div>\n        <form @submit.prevent=\"submitForm\">\n          <div v-show=\"errorMessage\" class=\"alert alert-danger failed\">\n            <template v-if=\"v$.form.$errors && v$.form.$errors.length\">\n              {{ errorMessage }}\n            </template>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"username\">Username</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"username\"\n              v-model=\"form.username\"\n            />\n            <div class=\"field-error\" v-if=\"$v.form.username.$dirty\">\n              <div class=\"error\" v-if=\"!$v.form.username.required\">\n                Username is required\n              </div>\n              <div class=\"error\" v-if=\"!$v.form.username.alphaNum\">\n                Username can only contain letters and numbers\n              </div>\n              <div class=\"error\" v-if=\"!$v.form.username.minLength\">\n                Username must have at least\n                {{ $v.form.username.$params.minLength.min }} letters.\n              </div>\n              <div class=\"error\" v-if=\"!$v.form.username.maxLength\">\n                Username is too long. It can contains maximium\n                {{ $v.form.username.$params.maxLength.max }} letters.\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"emailAddress\">Email address</label>\n            <input\n              type=\"email\"\n              class=\"form-control\"\n              id=\"emailAddress\"\n              v-model=\"form.emailAddress\"\n            />\n            <div class=\"field-error\" v-if=\"$v.form.emailAddress.$dirty\">\n              <div class=\"error\" v-if=\"!$v.form.emailAddress.required\">\n                Email address is required\n              </div>\n              <div class=\"error\" v-if=\"!$v.form.emailAddress.email\">\n                This is not a valid email address\n              </div>\n              <div class=\"error\" v-if=\"!$v.form.emailAddress.maxLength\">\n                Email address is too long. It can contains maximium\n                {{ $v.form.emailAddress.$params.maxLength.max }} letters.\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"password\"\n              v-model=\"form.password\"\n            />\n            <div class=\"field-error\" v-if=\"$v.form.password.$dirty\">\n              <div class=\"error\" v-if=\"!$v.form.password.required\">\n                Password is required\n              </div>\n              <div class=\"error\" v-if=\"!$v.form.password.minLength\">\n                Password is too short. It can contains at least\n                {{ $v.form.password.$params.minLength.min }} letters.\n              </div>\n              <div class=\"error\" v-if=\"!$v.form.password.maxLength\">\n                Password is too long. It can contains maximium\n                {{ $v.form.password.$params.maxLength.max }} letters.\n              </div>\n            </div>\n          </div>\n          <button type=\"submit\" class=\"btn btn-primary btn-block\">\n            Create account\n          </button>\n          <p class=\"accept-terms text-muted\">\n            By clicking “Create account”, you agree to our\n            <a href=\"#\">terms of service</a> and <a href=\"#\">privacy policy</a>.\n          </p>\n          <p class=\"text-center text-muted\">\n            Already have an account? <a href=\"/login\">Sign in</a>\n          </p>\n        </form>\n      </div>\n    </div>\n    <footer class=\"footer\">\n      <span class=\"copyright\">&copy; 2018 TaskAgile.com</span>\n      <ul class=\"footer-links list-inline float-right\">\n        <li class=\"list-inline-item\"><a href=\"#\">About</a></li>\n        <li class=\"list-inline-item\"><a href=\"#\">Terms of Service</a></li>\n        <li class=\"list-inline-item\"><a href=\"#\">Privacy Policy</a></li>\n        <li class=\"list-inline-item\">\n          <a\n            href=\"https://github.com/taskagile/vuejs.spring-boot.mysql\"\n            target=\"_blank\"\n            >GitHub</a\n          >\n        </li>\n      </ul>\n    </footer>\n  </div>\n</template>\n\n<script>\nimport {\n  required,\n  email,\n  minLength,\n  maxLength,\n  alphaNum,\n} from \"@vuelidate/validators\";\nimport registrationService from \"@/services/registration\";\n\nexport default {\n  name: \"RegisterPage\",\n  data: function () {\n    return {\n      form: {\n        username: \"\",\n        emailAddress: \"\",\n        password: \"\",\n      },\n      errorMessage: \"\",\n    };\n  },\n  validations: {\n    form: {\n      username: {\n        required,\n        minLength: minLength(2),\n        maxLength: maxLength(50),\n        alphaNum,\n      },\n      emailAddress: {\n        required,\n        email,\n        maxLength: maxLength(100),\n      },\n      password: {\n        required,\n        minLength: minLength(6),\n        maxLength: maxLength(30),\n      },\n    },\n  },\n  methods: {\n    submitForm() {\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      }\n\n      registrationService\n        .register(this.form)\n        .then(() => {\n          this.$router.push({ name: \"LoginPage\" });\n        })\n        .catch((error) => {\n          this.errorMessage = \"Failed to register user. \" + error.message;\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  max-width: 900px;\n}\n\n.register-form {\n  margin-top: 50px;\n  max-width: 320px;\n}\n\n.logo-wrapper {\n  text-align: center;\n  margin-bottom: 40px;\n\n  .tagline {\n    line-height: 180%;\n    color: #666;\n  }\n\n  .logo {\n    max-width: 150px;\n    margin: 0 auto;\n  }\n}\n\n.register-form {\n  .form-group label {\n    font-weight: bold;\n    color: #555;\n  }\n\n  .accept-terms {\n    margin: 20px 0 40px 0;\n  }\n}\n\n.footer {\n  width: 100%;\n  font-size: 13px;\n  color: #666;\n  line-height: 40px;\n  border-top: 1px solid #ddd;\n  margin-top: 50px;\n\n  .list-inline-item {\n    margin-right: 10px;\n  }\n\n  a {\n    color: #666;\n  }\n}\n</style>\n","import { unref } from 'vue-demi';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\nfunction normalizeValidatorObject(validator) {\n  return isFunction(validator.$validator) ? _objectSpread2({}, validator) : {\n    $validator: validator\n  };\n}\nfunction isPromise(object) {\n  return isObject(object) && isFunction(object.then);\n}\nfunction unwrapValidatorResponse(result) {\n  if (typeof result === 'object') return result.$valid;\n  return result;\n}\nfunction unwrapNormalizedValidator(validator) {\n  return validator.$validator || validator;\n}\n\nfunction withParams($params, $validator) {\n  if (!isObject($params)) throw new Error(`[@vuelidate/validators]: First parameter to \"withParams\" should be an object, provided ${typeof $params}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$params = _objectSpread2(_objectSpread2({}, validatorObj.$params || {}), $params);\n  return validatorObj;\n}\n\nfunction withMessage($message, $validator) {\n  if (!isFunction($message) && typeof unref($message) !== 'string') throw new Error(`[@vuelidate/validators]: First parameter to \"withMessage\" should be string or a function returning a string, provided ${typeof $message}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$message = $message;\n  return validatorObj;\n}\n\nfunction withAsync($validator) {\n  let $watchTargets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const validatorObj = normalizeValidatorObject($validator);\n  return _objectSpread2(_objectSpread2({}, validatorObj), {}, {\n    $async: true,\n    $watchTargets\n  });\n}\n\nfunction forEach(validators) {\n  return {\n    $validator(collection) {\n      for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        others[_key - 1] = arguments[_key];\n      }\n\n      return unref(collection).reduce((previous, collectionItem, index) => {\n        const collectionEntryResult = Object.entries(collectionItem).reduce((all, _ref) => {\n          let [property, $model] = _ref;\n          const innerValidators = validators[property] || {};\n          const propertyResult = Object.entries(innerValidators).reduce((all, _ref2) => {\n            let [validatorName, currentValidator] = _ref2;\n            const validatorFunction = unwrapNormalizedValidator(currentValidator);\n            const $response = validatorFunction.call(this, $model, collectionItem, index, ...others);\n            const $valid = unwrapValidatorResponse($response);\n            all.$data[validatorName] = $response;\n            all.$data.$invalid = !$valid || !!all.$data.$invalid;\n            all.$data.$error = all.$data.$invalid;\n\n            if (!$valid) {\n              let $message = currentValidator.$message || '';\n              const $params = currentValidator.$params || {};\n\n              if (typeof $message === 'function') {\n                $message = $message({\n                  $pending: false,\n                  $invalid: !$valid,\n                  $params,\n                  $model,\n                  $response\n                });\n              }\n\n              all.$errors.push({\n                $property: property,\n                $message,\n                $params,\n                $response,\n                $model,\n                $pending: false,\n                $validator: validatorName\n              });\n            }\n\n            return {\n              $valid: all.$valid && $valid,\n              $data: all.$data,\n              $errors: all.$errors\n            };\n          }, {\n            $valid: true,\n            $data: {},\n            $errors: []\n          });\n          all.$data[property] = propertyResult.$data;\n          all.$errors[property] = propertyResult.$errors;\n          return {\n            $valid: all.$valid && propertyResult.$valid,\n            $data: all.$data,\n            $errors: all.$errors\n          };\n        }, {\n          $valid: true,\n          $data: {},\n          $errors: {}\n        });\n        return {\n          $valid: previous.$valid && collectionEntryResult.$valid,\n          $data: previous.$data.concat(collectionEntryResult.$data),\n          $errors: previous.$errors.concat(collectionEntryResult.$errors)\n        };\n      }, {\n        $valid: true,\n        $data: [],\n        $errors: []\n      });\n    },\n\n    $message: _ref3 => {\n      let {\n        $response\n      } = _ref3;\n      return $response ? $response.$errors.map(context => {\n        return Object.values(context).map(errors => errors.map(error => error.$message)).reduce((a, b) => a.concat(b), []);\n      }) : [];\n    }\n  };\n}\n\nconst req = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return !!value.length;\n\n  if (value === undefined || value === null) {\n    return false;\n  }\n\n  if (value === false) {\n    return true;\n  }\n\n  if (value instanceof Date) {\n    return !isNaN(value.getTime());\n  }\n\n  if (typeof value === 'object') {\n    for (let _ in value) return true;\n\n    return false;\n  }\n\n  return !!String(value).length;\n};\nconst len = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return value.length;\n\n  if (typeof value === 'object') {\n    return Object.keys(value).length;\n  }\n\n  return String(value).length;\n};\nfunction regex() {\n  for (var _len = arguments.length, expr = new Array(_len), _key = 0; _key < _len; _key++) {\n    expr[_key] = arguments[_key];\n  }\n\n  return value => {\n    value = unref(value);\n    return !req(value) || expr.every(reg => {\n      reg.lastIndex = 0;\n      return reg.test(value);\n    });\n  };\n}\n\nvar common = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forEach: forEach,\n  len: len,\n  normalizeValidatorObject: normalizeValidatorObject,\n  regex: regex,\n  req: req,\n  unwrap: unref,\n  unwrapNormalizedValidator: unwrapNormalizedValidator,\n  unwrapValidatorResponse: unwrapValidatorResponse,\n  withAsync: withAsync,\n  withMessage: withMessage,\n  withParams: withParams\n});\n\nvar alpha$1 = regex(/^[a-zA-Z]*$/);\n\nvar alpha = {\n  $validator: alpha$1,\n  $message: 'The value is not alphabetical',\n  $params: {\n    type: 'alpha'\n  }\n};\n\nvar alphaNum$1 = regex(/^[a-zA-Z0-9]*$/);\n\nvar alphaNum = {\n  $validator: alphaNum$1,\n  $message: 'The value must be alpha-numeric',\n  $params: {\n    type: 'alphaNum'\n  }\n};\n\nvar numeric$1 = regex(/^\\d*(\\.\\d+)?$/);\n\nvar numeric = {\n  $validator: numeric$1,\n  $message: 'Value must be numeric',\n  $params: {\n    type: 'numeric'\n  }\n};\n\nfunction between$1 (min, max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +unref(min) <= +value && +unref(max) >= +value;\n}\n\nfunction between (min, max) {\n  return {\n    $validator: between$1(min, max),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `The value must be between ${$params.min} and ${$params.max}`;\n    },\n    $params: {\n      min,\n      max,\n      type: 'between'\n    }\n  };\n}\n\nconst emailRegex = /^(?:[A-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9]{2,}(?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nvar email$1 = regex(emailRegex);\n\nvar email = {\n  $validator: email$1,\n  $message: 'Value is not a valid email address',\n  $params: {\n    type: 'email'\n  }\n};\n\nfunction ipAddress$1 (value) {\n  if (!req(value)) {\n    return true;\n  }\n\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  const nibbles = value.split('.');\n  return nibbles.length === 4 && nibbles.every(nibbleValid);\n}\n\nconst nibbleValid = nibble => {\n  if (nibble.length > 3 || nibble.length === 0) {\n    return false;\n  }\n\n  if (nibble[0] === '0' && nibble !== '0') {\n    return false;\n  }\n\n  if (!nibble.match(/^\\d+$/)) {\n    return false;\n  }\n\n  const numeric = +nibble | 0;\n  return numeric >= 0 && numeric <= 255;\n};\n\nvar ipAddress = {\n  $validator: ipAddress$1,\n  $message: 'The value is not a valid IP address',\n  $params: {\n    type: 'ipAddress'\n  }\n};\n\nfunction macAddress$1 () {\n  let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':';\n  return value => {\n    separator = unref(separator);\n\n    if (!req(value)) {\n      return true;\n    }\n\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    const parts = typeof separator === 'string' && separator !== '' ? value.split(separator) : value.length === 12 || value.length === 16 ? value.match(/.{2}/g) : null;\n    return parts !== null && (parts.length === 6 || parts.length === 8) && parts.every(hexValid);\n  };\n}\n\nconst hexValid = hex => hex.toLowerCase().match(/^[0-9a-f]{2}$/);\n\nfunction macAddress (separator) {\n  return {\n    $validator: macAddress$1(separator),\n    $message: 'The value is not a valid MAC Address',\n    $params: {\n      type: 'macAddress'\n    }\n  };\n}\n\nfunction maxLength$1 (length) {\n  return value => !req(value) || len(value) <= unref(length);\n}\n\nfunction maxLength (max) {\n  return {\n    $validator: maxLength$1(max),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `The maximum length allowed is ${$params.max}`;\n    },\n    $params: {\n      max,\n      type: 'maxLength'\n    }\n  };\n}\n\nfunction minLength$1 (length) {\n  return value => !req(value) || len(value) >= unref(length);\n}\n\nfunction minLength (min) {\n  return {\n    $validator: minLength$1(min),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `This field should be at least ${$params.min} characters long`;\n    },\n    $params: {\n      min,\n      type: 'minLength'\n    }\n  };\n}\n\nfunction required$1 (value) {\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n\n  return req(value);\n}\n\nvar required = {\n  $validator: required$1,\n  $message: 'Value is required',\n  $params: {\n    type: 'required'\n  }\n};\n\nconst validate$1 = (prop, val) => prop ? req(typeof val === 'string' ? val.trim() : val) : true;\n\nfunction requiredIf$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate$1(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate$1(result, value);\n  };\n}\n\nfunction requiredIf (prop) {\n  return {\n    $validator: requiredIf$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredIf',\n      prop\n    }\n  };\n}\n\nconst validate = (prop, val) => !prop ? req(typeof val === 'string' ? val.trim() : val) : true;\n\nfunction requiredUnless$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate(result, value);\n  };\n}\n\nfunction requiredUnless (prop) {\n  return {\n    $validator: requiredUnless$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredUnless',\n      prop\n    }\n  };\n}\n\nfunction sameAs$1 (equalTo) {\n  return value => unref(value) === unref(equalTo);\n}\n\nfunction sameAs (equalTo) {\n  let otherName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'other';\n  return {\n    $validator: sameAs$1(equalTo),\n    $message: _ref => {\n      return `The value must be equal to the ${otherName} value`;\n    },\n    $params: {\n      equalTo,\n      otherName,\n      type: 'sameAs'\n    }\n  };\n}\n\nconst urlRegex = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nvar url$1 = regex(urlRegex);\n\nvar url = {\n  $validator: url$1,\n  $message: 'The value is not a valid URL address',\n  $params: {\n    type: 'url'\n  }\n};\n\nfunction syncOr(validators) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return validators.reduce((valid, fn) => {\n      if (unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, false);\n  };\n}\n\nfunction asyncOr(validators) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return validators.reduce(async (valid, fn) => {\n      const r = await valid;\n      if (unwrapValidatorResponse(r)) return r;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, Promise.resolve(false));\n  };\n}\n\nfunction or$1() {\n  for (var _len3 = arguments.length, validators = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    validators[_key3] = arguments[_key3];\n  }\n\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncOr(validators) : syncOr(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\nfunction or () {\n  return withParams({\n    type: 'or'\n  }, withMessage('The value does not match any of the provided validators', or$1(...arguments)));\n}\n\nfunction syncAnd(validators) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return validators.reduce((valid, fn) => {\n      if (!unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, true);\n  };\n}\n\nfunction asyncAnd(validators) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return validators.reduce(async (valid, fn) => {\n      const r = await valid;\n      if (!unwrapValidatorResponse(r)) return r;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, Promise.resolve(true));\n  };\n}\n\nfunction and$1() {\n  for (var _len3 = arguments.length, validators = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    validators[_key3] = arguments[_key3];\n  }\n\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncAnd(validators) : syncAnd(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\nfunction and () {\n  return withParams({\n    type: 'and'\n  }, withMessage('The value does not match all of the provided validators', and$1(...arguments)));\n}\n\nfunction not$1 (validator) {\n  return function (value, vm) {\n    if (!req(value)) return true;\n    const response = unwrapNormalizedValidator(validator).call(this, value, vm);\n    if (!isPromise(response)) return !unwrapValidatorResponse(response);\n    return response.then(r => !unwrapValidatorResponse(r));\n  };\n}\n\nfunction not (validator) {\n  return {\n    $validator: not$1(validator),\n    $message: `The value does not match the provided validator`,\n    $params: {\n      type: 'not'\n    }\n  };\n}\n\nfunction minValue$1 (min) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value >= +unref(min);\n}\n\nfunction minValue (min) {\n  return {\n    $validator: minValue$1(min),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `The minimum value allowed is ${$params.min}`;\n    },\n    $params: {\n      min,\n      type: 'minValue'\n    }\n  };\n}\n\nfunction maxValue$1 (max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value <= +unref(max);\n}\n\nvar maxValue = (max => ({\n  $validator: maxValue$1(max),\n  $message: _ref => {\n    let {\n      $params\n    } = _ref;\n    return `The maximum value allowed is ${$params.max}`;\n  },\n  $params: {\n    max,\n    type: 'maxValue'\n  }\n}));\n\nvar integer$1 = regex(/(^[0-9]*$)|(^-[0-9]+$)/);\n\nvar integer = {\n  $validator: integer$1,\n  $message: 'Value is not an integer',\n  $params: {\n    type: 'integer'\n  }\n};\n\nvar decimal$1 = regex(/^[-]?\\d*(\\.\\d+)?$/);\n\nvar decimal = {\n  $validator: decimal$1,\n  $message: 'Value must be decimal',\n  $params: {\n    type: 'decimal'\n  }\n};\n\nfunction createI18nMessage(_ref) {\n  let {\n    t,\n    messagePath = _ref2 => {\n      let {\n        $validator\n      } = _ref2;\n      return `validations.${$validator}`;\n    },\n    messageParams = params => params\n  } = _ref;\n  return function withI18nMessage(validator) {\n    let {\n      withArguments = false,\n      messagePath: localMessagePath = messagePath,\n      messageParams: localMessageParams = messageParams\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    function message(props) {\n      return t(localMessagePath(props), localMessageParams(_objectSpread2({\n        model: props.$model,\n        property: props.$property,\n        pending: props.$pending,\n        invalid: props.$invalid,\n        response: props.$response,\n        validator: props.$validator,\n        propertyPath: props.$propertyPath\n      }, props.$params)));\n    }\n\n    if (withArguments && typeof validator === 'function') {\n      return function () {\n        return withMessage(message, validator(...arguments));\n      };\n    }\n\n    return withMessage(message, validator);\n  };\n}\n\nexport { alpha, alphaNum, and, between, createI18nMessage, decimal, email, common as helpers, integer, ipAddress, macAddress, maxLength, maxValue, minLength, minValue, not, numeric, or, required, requiredIf, requiredUnless, sameAs, url };\n","import axios from \"axios\";\n\nexport default {\n  /**\n   * Register a new user\n   * @param {Object} detail registration detail\n   */\n  register(detail) {\n    return new Promise((resolve, reject) => {\n      axios\n        .post(\"/registrations\", detail)\n        .then(({ data }) => {\n          resolve(data);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    });\n  },\n};\n","import { render } from \"./RegisterPage.vue?vue&type=template&id=48515de6&scoped=true\"\nimport script from \"./RegisterPage.vue?vue&type=script&lang=js\"\nexport * from \"./RegisterPage.vue?vue&type=script&lang=js\"\n\nimport \"./RegisterPage.vue?vue&type=style&index=0&id=48515de6&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\projectSTS\\\\TideAMI\\\\front-end\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-48515de6\"]])\n\nexport default __exports__"],"names":["class","src","for","submitForm","v$","form","$errors","length","errorMessage","type","id","username","$v","$dirty","required","alphaNum","minLength","$params","min","maxLength","max","emailAddress","email","password","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","isFunction","val","isObject","o","Array","isArray","normalizeValidatorObject","validator","$validator","unwrapValidatorResponse","result","$valid","unwrapNormalizedValidator","withParams","Error","validatorObj","withMessage","$message","unref","withAsync","$watchTargets","undefined","$async","validators","collection","_len","others","_key","reduce","previous","collectionItem","index","collectionEntryResult","entries","all","_ref","property","$model","innerValidators","propertyResult","_ref2","validatorName","currentValidator","validatorFunction","$response","call","this","$data","$invalid","$error","$pending","$property","concat","_ref3","map","context","values","errors","error","a","b","req","Date","isNaN","getTime","_","String","len","regex","expr","every","reg","lastIndex","test","alphaNum$1","emailRegex","email$1","maxLength$1","minLength$1","required$1","trim","urlRegex","register","detail","Promise","resolve","reject","axios","post","then","data","catch","name","validations","methods","$touch","registration","$router","message","__exports__","render"],"sourceRoot":""}